{"version":3,"file":"lib_index_js.7997a9f4d43c4e0be479.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAsD;AACL;AACK;AACb;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2DAAS;AACxB;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA,sDAAsD,gEAAS;AAC/D;AACA,oCAAoC,kDAAa;AACjD,mCAAmC,gEAAc,GAAG,SAAS;AAC7D;AACA,oCAAoC,gEAAS;AAC7C;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;;;;ACxCuC;AACxB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+CAAQ;AAC1C,YAAY,0DAAmB;AAC/B,QAAQ,0DAAmB;AAC3B;AACA;AACA;AACA,QAAQ,0DAAmB,aAAa;AACxC;AACA;AACA,gBAAgB,uEAAqB,GAAG,yBAAyB;AACjE;AACA;AACA,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;AACA;AACO,4BAA4B,6DAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0DAAmB;AAClC;AACA","sources":["webpack://Proxy/./lib/index.js","webpack://Proxy/./lib/widget.js"],"sourcesContent":["import { MainAreaWidget } from '@jupyterlab/apputils';\nimport { ILauncher } from '@jupyterlab/launcher';\nimport { reactIcon } from '@jupyterlab/ui-components';\nimport { CounterWidget } from './widget';\n/**\n * The command IDs used by the react-widget plugin.\n */\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.create = 'accessPort';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * Initialization data for the react-widget extension.\n */\nconst extension = {\n    id: 'access-port',\n    autoStart: true,\n    optional: [ILauncher],\n    activate: (app, launcher) => {\n        const { commands } = app;\n        const command = CommandIDs.create;\n        commands.addCommand(command, {\n            caption: 'Access a workspace internal port',\n            label: 'Access Port',\n            icon: (args) => (args['isPalette'] ? '' : reactIcon),\n            execute: () => {\n                const content = new CounterWidget();\n                const widget = new MainAreaWidget({ content });\n                widget.title.label = 'Access Port';\n                widget.title.icon = reactIcon;\n                app.shell.add(widget, 'main');\n            },\n        });\n        if (launcher) {\n            launcher.add({\n                command,\n            });\n        }\n    },\n};\nexport default extension;\n","import { ReactWidget, InputDialog } from '@jupyterlab/apputils';\nimport React, { useState } from 'react';\n/**\n * React component for a counter.\n *\n * @returns The React component\n */\nconst CounterComponent = () => {\n    const [counter, setCounter] = useState(0);\n    return (React.createElement(\"div\", null,\n        React.createElement(\"p\", null,\n            \"Access a workspace internal port (\",\n            counter,\n            \")\"),\n        React.createElement(\"button\", { onClick: () => {\n                setCounter(counter + 1);\n                // Request a number\n                InputDialog.getNumber({ title: 'Select a port:' }).then(value => {\n                    console.log('number ' + value.value);\n                    window.open('https://127.0.0.1:' + value.value);\n                });\n            } }, \"Access\")));\n};\n/**\n * A Counter Lumino Widget that wraps a CounterComponent.\n */\nexport class CounterWidget extends ReactWidget {\n    /**\n     * Constructs a new CounterWidget.\n     */\n    constructor() {\n        super();\n        this.addClass('jp-ReactWidget');\n    }\n    render() {\n        return React.createElement(CounterComponent, null);\n    }\n}\n"],"names":[],"sourceRoot":""}